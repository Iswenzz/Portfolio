{"version":3,"sources":["utility.js","modules/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Utility","elem","offset","window","scrollTo","top","document","getElementById","getBoundingClientRect","pageYOffset","behavior","NavBar","AppBar","color","Toolbar","Typography","type","style","flex","Button","onClick","scrollToElement","hidden","IconButton","aria-label","class","parallaxBg","App","className","flexgrow","bgImage","strength","id","height","textAlign","marginTop","htmlColor","paddingLeft","paddingRight","Grid","container","spacing","item","xs","paddingTop","Card","CardHeader","title","subheader","CardMedia","image","CardContent","variant","component","CardActions","TextField","required","label","fullWidth","multiline","rows","Date","getFullYear","href","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cbd977d2.chunk.js","sourcesContent":["export default class Utility\r\n{\r\n    /**\r\n     * Smoothly scroll to an element on the page\r\n     * @param {*} elem - The id of the element to scroll to\r\n     */\r\n    static scrollToElement(elem, offset = 0)\r\n    {\r\n        window.scrollTo({\r\n                top: (document.getElementById(elem).getBoundingClientRect().top + window.pageYOffset - 20) - offset,\r\n                behavior: \"smooth\"\r\n            }\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"../css/App.scss\";\r\nimport Utility from \"../utility\"\r\n\r\n// Core Components\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\n\r\n// Icon Components\r\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\r\nimport MenuButtonIcon from \"@material-ui/icons/Menu\";\r\n\r\nexport default function NavBar()\r\n{\r\n    return (\r\n        <>\r\n            <AppBar color=\"default\">\r\n                <Toolbar>\r\n                    {/*\r\n                        I only have this typography to move the\r\n                        buttons to the right side of the navbar.\r\n                        \r\n                        TODO: Change this so I don't need to have this\r\n                        Typography component here.\r\n                    */}\r\n                    <Typography type=\"title\" color=\"inherit\" style={{ flex: 1 }}></Typography>\r\n                    <header>\r\n                        {/* \r\n                            TODO: Remove the ripple effect when the\r\n                            buttons are clicked (especially the menu button)\r\n                        */}\r\n                        <Button onClick={() => Utility.scrollToElement(\"home\")} hidden>Home</Button>\r\n                        <Button onClick={() => Utility.scrollToElement(\"about-me\")} hidden>About Me</Button>\r\n                        <Button onClick={() => Utility.scrollToElement(\"experience\")} hidden>Experience</Button>\r\n                        <Button onClick={() => Utility.scrollToElement(\"education\", - 75)} hidden>Education</Button>\r\n                        <Button onClick={() => Utility.scrollToElement(\"portfolio\")} hidden>Portfolio</Button>\r\n                        <Button onClick={() => Utility.scrollToElement(\"contact\")} hidden>Contact</Button>\r\n                        <IconButton aria-label=\"theme\" color=\"inherit\" hidden=\"false\">\r\n                            <InvertColorsIcon />\r\n                        </IconButton>\r\n                        <IconButton class=\"navbar-menu-button\" aria-label=\"theme\" color=\"inherit\" hidden>\r\n                            <MenuButtonIcon />\r\n                        </IconButton>\r\n                    </header>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport Utility from \"./utility\"\r\n\r\n// Core Components\r\nimport { \r\n    Button,\r\n    Grid,\r\n    clsx,\r\n    Typography,\r\n    IconButton,\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Collapse,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport NavBar from \"./modules/NavBar\";\r\n\r\n// Icon Components\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\n// Constant Variables\r\nconst parallaxBg = \"https://ultrawidewallpapers.com/wp-content/uploads/2018/06/apple-mojave-night-3440x1440.jpg\";\r\nconst parallaxStr = 750;\r\nconst divHeight = \"100vh\";\r\n\r\nexport default function App()\r\n{\r\n    return (\r\n        <>\r\n            <div className=\"App\" style={{ flexgrow: 1 }}>\r\n                <NavBar />\r\n                <body>\r\n                    {/* Introductory Nameplate Display */}\r\n                    <Parallax bgImage={parallaxBg} strength={parallaxStr}>\r\n                        <section id=\"home\" class=\"nameplate\" style={{height: divHeight, textAlign: \"center\"}}>\r\n                            <h1 class=\"heading\">DAVID RYAN</h1>\r\n                            <h2 class=\"subheading\">Computer Science Student &<br/>Self-Taught Software Developer</h2>\r\n\r\n                            <h5 class=\"read-more\">Read More</h5>\r\n                            <Button style={{marginTop: -70 + \"px\"}} onClick={() => Utility.scrollToElement(\"about-me\")}>\r\n                                <ExpandMoreIcon htmlColor=\"#ffffff\" />\r\n                            </Button>\r\n                        </section>\r\n                    </Parallax>\r\n                    \r\n                    {/* About Me */}\r\n                    <section id=\"about-me\" style={{height: divHeight, textAlign: \"center\"}}>\r\n                        <h1 class=\"body-heading-light\">ABOUT ME</h1>\r\n                        <h2 class=\"body-text-light-centered\">\r\n                            Hello there! My name is David, and over the past 4 years I have been\r\n                            actively learning how to program. I first discovered my love for web and \r\n                            software development back on a game called Call of Duty 4, creating custom levels \r\n                            with scripted events. From that point on I decided that I wanted to have a career \r\n                            in computer science, and began self teaching myself different things; By the time \r\n                            I had gotten into my junior year of high school I had a good understanding of the basics, \r\n                            and decided to take academic courses to better my understanding of programming as a whole.\r\n                            Fast forward to the present day I am enrolled in my second year of college and am working \r\n                            my way words obtaining my bachelor's degree in computer science. My ultimate goal is to be\r\n                            an exceptionally well rounded developer who is able to reach new heights with modern technology.\r\n                        </h2>\r\n                    </section>\r\n\r\n                    <Parallax bgImage={parallaxBg} strength={parallaxStr}>\r\n                        <section style={{height: \"25vh\"}}/>\r\n                    </Parallax>\r\n                    \r\n                    {/* Experience */}\r\n                    <section id=\"experience\" style={{height: divHeight, textAlign: \"center\"}}>\r\n                        <h1 class=\"body-heading-light\">EXPERIENCE</h1>\r\n                        <nav style={{paddingLeft: \"15%\", paddingRight: \"5%\"}}>\r\n                             <Grid container spacing={2}>\r\n                                <Grid item xs>\r\n                                    <h3 class=\"bulleted-nav-heading\">Web Technologies</h3>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">HTML5</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Javascript</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">ECMAScript 2009+</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">ReactJS Library</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">NodeJS & Express Framework</h3>\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid>\r\n\r\n                                <Grid item xs>\r\n                                    <h3 class=\"bulleted-nav-heading\">Software Development</h3>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">C++17</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">C# & .NET Framework 4.6.0+</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">C# Winforms (Desktop Applications)</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">SQL</h3>\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid>\r\n\r\n                                <Grid item xs>\r\n                                    <h3 class=\"bulleted-nav-heading\">Miscellaneous Skills</h3>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Adobe Photoshop CC</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Adobe After Effects CC</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Adobe Illustrator CC</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Subversion (Git)</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">FTP Client (WinSCP)</h3>\r\n                                        </li>\r\n                                        <li>\r\n                                            <h3 class=\"body-text-light-bulleted\">Linux Kernel & TTY<br/>(Ubuntu 16.04+, Arch)</h3>\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </nav>\r\n                    </section>\r\n                    <section id=\"education\" style={{height: divHeight, textAlign: \"center\", marginTop: \"-400px\"}}>\r\n                        <article style={{marginTop: \"-175px\"}}>\r\n                            <h1 class=\"body-heading-light\" style={{paddingTop: \"12%\"}}>EDUCATION</h1>\r\n                            <h2 class=\"body-text-light-centered\" style={{marginTop: \"-50px\"}}>\r\n                                As of right now, I have finished my first year attending SUNY Broome Community College\r\n                                enrolled in the Computer Science (CSAS) Transfer program; I plan to transfer to Binghamton\r\n                                University to finish this program and obtain my bachelor's degree.\r\n                            </h2>\r\n                            <nav class=\"bulleted-nav\">\r\n                                <Grid container spacing={3}>\r\n                                    {/* High School Credientials */}\r\n                                    <Grid item xs>\r\n                                        <h3 class=\"bulleted-nav-heading\">High School Credits</h3>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">Computer Science 1 & 2</h3>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">AP Computer Science</h3>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </Grid>\r\n\r\n                                    {/* Collegiate Credentials */}\r\n                                    <Grid item xs>\r\n                                        <h3 class=\"bulleted-nav-heading\">College Credits</h3>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">Problem Solving & Communication Tools</h3>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">Computer Concepts and Applications</h3>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">Structured Programming</h3>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h3 class=\"body-text-light-bulleted\">Digital Logic</h3>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </Grid>\r\n                                </Grid>   \r\n                            </nav>\r\n                        </article>\r\n                    </section>\r\n\r\n                    <Parallax bgImage={parallaxBg} strength={parallaxStr}>\r\n                        <section style={{ height: \"25vh\"}} />\r\n                    </Parallax>\r\n                    \r\n                    {/* Portfolio (All Public Repositories) */}\r\n                    <section id=\"portfolio\" style={{height: \"60vh\", textAlign: \"center\"}}>\r\n                        <h1 class=\"body-heading-light\">PORTFOLIO</h1>\r\n                        <Grid container spacing={3} style={{paddingLeft: \"5%\", paddingRight: \"5%\"}}>\r\n                            <Grid item xs>\r\n                                <Card>\r\n                                   <CardHeader title=\"Test Card Header Title\" subheader=\"September 17, 2020\">\r\n                                        <CardMedia className=\"media\" image={parallaxBg} title=\"Test Media Title\"/>\r\n                                   </CardHeader>\r\n                                   <CardContent>\r\n                                       <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n                                            This is a test typograhpy that will act as the body\r\n                                            text of the card content. This text is a typography\r\n                                            component and is a being used in a good way to test\r\n                                            if this text will work or not for the card content body.\r\n                                       </Typography>\r\n                                   </CardContent>\r\n                                   <CardActions>\r\n                                        <IconButton aria-label=\"share\">\r\n                                            <ShareIcon />\r\n                                        </IconButton>\r\n                                        {/* <IconButton\r\n                                            className={clsx({expand}, {\r\n                                                [{expandOpen}]: expanded,\r\n                                            })}\r\n                                            onClick={handleExpandClick}\r\n                                            aria-expanded={expanded}\r\n                                            aria-label=\"show more\"\r\n                                        >\r\n                                            <ExpandMoreIcon />\r\n                                        </IconButton> */}\r\n                                   </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <Card>\r\n                                   <CardHeader title=\"Test Card Header Title\" subheader=\"September 17, 2020\">\r\n                                        <CardMedia className=\"media\" image={parallaxBg} title=\"Test Media Title\"/>\r\n                                   </CardHeader>\r\n                                   <CardContent>\r\n                                       <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n                                            This is a test typograhpy that will act as the body\r\n                                            text of the card content. This text is a typography\r\n                                            component and is a being used in a good way to test\r\n                                            if this text will work or not for the card content body.\r\n                                       </Typography>\r\n                                   </CardContent>\r\n                                   <CardActions>\r\n                                        <IconButton aria-label=\"share\">\r\n                                            <ShareIcon />\r\n                                        </IconButton>\r\n                                        {/* <IconButton\r\n                                            className={clsx({expand}, {\r\n                                                [{expandOpen}]: expanded,\r\n                                            })}\r\n                                            onClick={handleExpandClick}\r\n                                            aria-expanded={expanded}\r\n                                            aria-label=\"show more\"\r\n                                        >\r\n                                            <ExpandMoreIcon />\r\n                                        </IconButton> */}\r\n                                   </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <Card>\r\n                                   <CardHeader title=\"Test Card Header Title\" subheader=\"September 17, 2020\">\r\n                                        <CardMedia className=\"media\" image={parallaxBg} title=\"Test Media Title\"/>\r\n                                   </CardHeader>\r\n                                   <CardContent>\r\n                                       <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n                                            This is a test typograhpy that will act as the body\r\n                                            text of the card content. This text is a typography\r\n                                            component and is a being used in a good way to test\r\n                                            if this text will work or not for the card content body.\r\n                                       </Typography>\r\n                                   </CardContent>\r\n                                   <CardActions>\r\n                                        <IconButton aria-label=\"share\">\r\n                                            <ShareIcon />\r\n                                        </IconButton>\r\n                                        {/* <IconButton\r\n                                            className={clsx({expand}, {\r\n                                                [{expandOpen}]: expanded,\r\n                                            })}\r\n                                            onClick={handleExpandClick}\r\n                                            aria-expanded={expanded}\r\n                                            aria-label=\"show more\"\r\n                                        >\r\n                                            <ExpandMoreIcon />\r\n                                        </IconButton> */}\r\n                                   </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <Card>\r\n                                   <CardHeader title=\"Test Card Header Title\" subheader=\"September 17, 2020\">\r\n                                        <CardMedia className=\"media\" image={parallaxBg} title=\"Test Media Title\"/>\r\n                                   </CardHeader>\r\n                                   <CardContent>\r\n                                       <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n                                            This is a test typograhpy that will act as the body\r\n                                            text of the card content. This text is a typography\r\n                                            component and is a being used in a good way to test\r\n                                            if this text will work or not for the card content body.\r\n                                       </Typography>\r\n                                   </CardContent>\r\n                                   <CardActions>\r\n                                        <IconButton aria-label=\"share\">\r\n                                            <ShareIcon />\r\n                                        </IconButton>\r\n                                        {/* <IconButton\r\n                                            className={clsx({expand}, {\r\n                                                [{expandOpen}]: expanded,\r\n                                            })}\r\n                                            onClick={handleExpandClick}\r\n                                            aria-expanded={expanded}\r\n                                            aria-label=\"show more\"\r\n                                        >\r\n                                            <ExpandMoreIcon />\r\n                                        </IconButton> */}\r\n                                   </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </section>\r\n\r\n                    {/* Contact (Name, Email, Subject, Message) */}\r\n                    <section id=\"contact\" style={{height: \"75vh\"}}>\r\n                        <h1 class=\"body-heading-light\" style={{textAlign: \"center\"}}>CONTACT</h1>\r\n                        <div style={{paddingLeft: \"15%\", paddingRight: \"15%\", marginTop: \"-25px\"}}>\r\n                            <TextField required id=\"name-text-field\" label=\"Name\" type=\"search\" fullWidth/>\r\n                            <TextField required id=\"email-text-field\" label=\"Email Address\" type=\"search\" fullWidth/>\r\n                            <TextField required id=\"subject-text-field\" label=\"Subject\" type=\"search\" fullWidth/>\r\n                            <TextField id=\"message-text-field\" label=\"Message\" type=\"search\" fullWidth\r\n                                multiline rows={4} variant=\"outlined\" style={{marginTop: \"10px\"}} color=\"inherit\"\r\n                            />\r\n                            <Button variant=\"contained\" style={{ marginTop: \"10px\"}}>Send</Button>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* Webpage Footer (Social Media & Copyright Information) */}\r\n                    <footer style={{height: \"15vh\", textAlign: \"center\"}}>\r\n                        <small class=\"copyright\">\r\n                            &copy; Copyright 2018-{new Date().getFullYear()}, David Ryan. All Rights Reserved\r\n                        </small>\r\n                        <IconButton style={{color: \"#bababa\"}} href=\"https://github.com/DavidMRyan\" target=\"_blank\">\r\n                            <GitHubIcon/>\r\n                        </IconButton>\r\n                    </footer>\r\n\r\n                    <Parallax bgImage={parallaxBg} strength={parallaxStr}>\r\n                        <section style={{height: \"20vh\"}} />\r\n                    </Parallax>\r\n                </body>\r\n            </div>\r\n        </>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  \twindow.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) \r\n{\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) \r\n\t{\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) \r\n\t\t{\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => \r\n\t\t{\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost)\r\n\t\t\t{\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => \r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) \r\n{\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => \r\n\t{\r\n\t\tregistration.onupdatefound = () => \r\n\t\t{\r\n\t\t\tconst installingWorker = registration.installing;\r\n\t\t\tif (installingWorker == null) \r\n\t\t\t\treturn;\r\n\r\n\t\t\tinstallingWorker.onstatechange = () => \r\n\t\t\t{\r\n\t\t\t\tif (installingWorker.state === \"installed\") \r\n\t\t\t\t{\r\n\t\t\t\t\tif (navigator.serviceWorker.controller) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Execute callback\r\n\t\t\t\t\tif (config && config.onUpdate)\r\n\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\tif (config && config.onSuccess) \r\n\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t}).catch(error => \r\n\t{\r\n\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) \r\n{\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t}).then(response => \r\n\t{\r\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\tif (\r\n\t\t\tresponse.status === 404 ||\r\n\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t)\r\n\t\t{\r\n\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\tnavigator.serviceWorker.ready.then(registration => \r\n\t\t\t{\r\n        \t\tregistration.unregister().then(() => \r\n\t\t\t\t{\r\n            \t\twindow.location.reload();\r\n          \t\t});\r\n        \t});\r\n      \t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t}\r\n\t}).catch(() => \r\n\t{\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() \r\n{\r\n  \tif (\"serviceWorker\" in navigator) \r\n\t{\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration =>\r\n\t\t{\r\n\t\t\tregistration.unregister();\r\n\t\t}).catch(error => \r\n\t\t{\r\n\t\t\tconsole.error(error.message);\r\n\t\t});\r\n  \t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}