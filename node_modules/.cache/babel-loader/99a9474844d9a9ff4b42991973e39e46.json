{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PortfolioWebsite\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/core/Menu\"; // core components\n\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const headerColorChange = () => {\n    const {\n      color,\n      changeColorOnScroll\n    } = props;\n    const windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  const {\n    color,\n    rightLinks,\n    leftLinks,\n    brand,\n    fixed,\n    absolute\n  } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  const brandComponent = /*#__PURE__*/React.createElement(Button, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }\n  }, brand);\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, leftLinks !== undefined ? brandComponent : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, leftLinks !== undefined ? /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, leftLinks) : brandComponent), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, rightLinks), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: mobileOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, leftLinks, rightLinks))));\n}\nHeader.defaultProp = {\n  color: \"white\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};","map":{"version":3,"sources":["D:/Projects/PortfolioWebsite/src/components/Header/Header.js"],"names":["React","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","styles","useStyles","Header","props","classes","mobileOpen","setMobileOpen","useState","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","rightLinks","leftLinks","brand","fixed","absolute","appBarClasses","appBar","brandComponent","title","container","undefined","flex","paper","drawerPaper","appResponsive","defaultProp","propTypes","oneOf","node","string","bool","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// @material-ui/icons\nimport Menu from \"@material-ui/core/Menu\";\n// core components\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    React.useEffect(() => {\n        if (props.changeColorOnScroll) {\n            window.addEventListener(\"scroll\", headerColorChange);\n        }\n        return function cleanup() {\n            if (props.changeColorOnScroll) {\n                window.removeEventListener(\"scroll\", headerColorChange);\n            }\n        };\n    });\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const headerColorChange = () => {\n        const { color, changeColorOnScroll } = props;\n        const windowsScrollTop = window.pageYOffset;\n        if (windowsScrollTop > changeColorOnScroll.height) {\n            document.body\n                .getElementsByTagName(\"header\")[0]\n                .classList.remove(classes[color]);\n            document.body\n                .getElementsByTagName(\"header\")[0]\n                .classList.add(classes[changeColorOnScroll.color]);\n        } else {\n            document.body\n                .getElementsByTagName(\"header\")[0]\n                .classList.add(classes[color]);\n            document.body\n                .getElementsByTagName(\"header\")[0]\n                .classList.remove(classes[changeColorOnScroll.color]);\n        }\n    };\n    const { color, rightLinks, leftLinks, brand, fixed, absolute } = props;\n    const appBarClasses = classNames({\n        [classes.appBar]: true,\n        [classes[color]]: color,\n        [classes.absolute]: absolute,\n        [classes.fixed]: fixed,\n    });\n    const brandComponent = <Button className={classes.title}>{brand}</Button>;\n    return (\n        <AppBar className={appBarClasses}>\n            <Toolbar className={classes.container}>\n                {leftLinks !== undefined ? brandComponent : null}\n                <div className={classes.flex}>\n                    {leftLinks !== undefined ? (\n                        <Hidden smDown implementation=\"css\">\n                            {leftLinks}\n                        </Hidden>\n                    ) : (\n                        brandComponent\n                    )}\n                </div>\n                <Hidden smDown implementation=\"css\">\n                    {rightLinks}\n                </Hidden>\n                <Hidden mdUp>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerToggle}\n                    >\n                        <Menu />\n                    </IconButton>\n                </Hidden>\n            </Toolbar>\n            <Hidden mdUp implementation=\"js\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={\"right\"}\n                    open={mobileOpen}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    onClose={handleDrawerToggle}\n                >\n                    <div className={classes.appResponsive}>\n                        {leftLinks}\n                        {rightLinks}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </AppBar>\n    );\n}\n\nHeader.defaultProp = {\n    color: \"white\",\n};\n\nHeader.propTypes = {\n    color: PropTypes.oneOf([\n        \"primary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"danger\",\n        \"transparent\",\n        \"white\",\n        \"rose\",\n        \"dark\",\n    ]),\n    rightLinks: PropTypes.node,\n    leftLinks: PropTypes.node,\n    brand: PropTypes.string,\n    fixed: PropTypes.bool,\n    absolute: PropTypes.bool,\n    // this will cause the sidebar to change the color from\n    // props.color (see above) to changeColorOnScroll.color\n    // when the window.pageYOffset is heigher or equal to\n    // changeColorOnScroll.height and then when it is smaller than\n    // changeColorOnScroll.height change it back to\n    // props.color (see above)\n    changeColorOnScroll: PropTypes.shape({\n        height: PropTypes.number.isRequired,\n        color: PropTypes.oneOf([\n            \"primary\",\n            \"info\",\n            \"success\",\n            \"warning\",\n            \"danger\",\n            \"transparent\",\n            \"white\",\n            \"rose\",\n            \"dark\",\n        ]).isRequired,\n    }),\n};\n"]},"metadata":{},"sourceType":"module"}